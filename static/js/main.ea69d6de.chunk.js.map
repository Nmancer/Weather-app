{"version":3,"sources":["reducers/index.js","reducers/CurrentWeatherReducer.js","reducers/LocationReducer.js","reducers/ForecastReducer.js","helpers/Global.js","components/Presentational/Loader.js","actions/index.js","helpers/iconTransform.js","components/Presentational/CurrentWeather.js","components/Presentational/ForecastItem.js","components/Presentational/Forecast.js","components/Container/WeatherContainer.js","components/Presentational/HeaderComp.js","components/App.js","serviceWorker.js","index.js"],"names":["combineReducers","currentWeather","state","arguments","length","undefined","action","type","payload","userLocation","forecast","Global","createGlobalStyle","_templateObject","MainWrapper","styled","div","_templateObject2","BounceAnimation","keyframes","Loader_templateObject","DotWrapper","Loader_templateObject2","Dot","_templateObject3","props","delay","LodingText","h1","_templateObject4","Loader","react_default","a","createElement","API_KEY","process","iconMap","Map","iconChanger","icon","get","Card","CurrentWeather_templateObject","primary","CardInfoBig","h2","CurrentWeather_templateObject2","Temperature","h3","CurrentWeather_templateObject3","Description","CurrentWeather_templateObject4","Wind","_templateObject5","CardInfoSmall","h4","_templateObject6","CurrentWeather","_ref","city","temp","windSpeed","description","split","className","dateStuff","str","cDate","Date","hour","slice","month","toLocaleString","date","getDate","day","weekday","ForecastItemWrapper","ForecastItem_templateObject","ForecastInfo","p","ForecastItem_templateObject2","ForecastItem","item","itemInfo","dt_txt","weather","main","ForecastWrapper","Forecast_templateObject","Forecast","weatherList","map","i","Presentational_ForecastItem","key","WeatherContainer","loaded","this","fetchLocation","setState","prevProps","_this2","longitude","fetchCurrentWeather","latitude","then","fetchForecast","_this$props$weather","name","wind","finishedLoading","list","Fragment","Presentational_CurrentWeather","humidity","speed","Presentational_Forecast","Presentational_Loader","Component","connect","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","fetch","concat","response","json","data","stop","_x","apply","_ref3","_callee4","_context4","navigator","geolocation","abrupt","getCurrentPosition","_ref4","_callee3","position","_context3","coords","sent","_x4","error","console","log","_x3","_ref2","_callee2","_context2","_x2","Header","HeaderComp_templateObject","HeaderItem","HeaderComp_templateObject2","HeaderComp","App","helpers_Global","Presentational_HeaderComp","Container_WeatherContainer","Boolean","window","location","hostname","match","AppStore","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","store","components_App","document","querySelector","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea69d6de.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport CurrentWeatherReducer from \"./CurrentWeatherReducer\";\r\nimport LocationReducer from \"./LocationReducer\";\r\nimport ForecastReducer from \"./ForecastReducer\";\r\nexport default combineReducers({\r\n  currentWeather: CurrentWeatherReducer,\r\n  userLocation: LocationReducer,\r\n  forecast: ForecastReducer\r\n});\r\n","export default (state = {}, action) => {\r\n  if (action.type === \"FETCH_CURRENTWEATHER\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n","export default (state = {}, action) => {\r\n  if (action.type === \"FETCH_LOCATION\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n","export default (state = {}, action) => {\r\n  if (action.type === \"FETCH_FORECAST\") {\r\n    return action.payload;\r\n  }\r\n  return state;\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport styled from \"styled-components\";\r\nconst Global = createGlobalStyle`\r\n* {\r\n    margin: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  body {\r\n    background-repeat: no-repeat;\r\n    background-attachment: fixed;\r\n    background-image: linear-gradient(to top, #cfd9df 0%, #e2ebf0 100%);\r\n    font-family: 'Barlow Semi Condensed', sans-serif;\r\n  }\r\n  `;\r\nconst MainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nexport { MainWrapper };\r\nexport default Global;\r\n","import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 15px }\r\n  100% { margin-bottom: 0 }\r\n`;\r\nconst DotWrapper = styled.div`\r\n  margin: 100px 0 50px 0;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n`;\r\nconst Dot = styled.div`\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${props => props.delay};\r\n`;\r\nconst LodingText = styled.h1`\r\n  color: black;\r\n`;\r\nconst Loader = () => {\r\n  return (\r\n    <DotWrapper>\r\n      <LodingText>loading</LodingText>\r\n      <Dot delay=\"0s\" />\r\n      <Dot delay=\".1s\" />\r\n      <Dot delay=\".2s\" />\r\n    </DotWrapper>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","const API_KEY = process.env.REACT_APP_API_KEY;\r\n\r\nexport const fetchCurrentWeather = (latitude, longitude) => async dispatch => {\r\n  // grab from weather data from api\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: \"FETCH_CURRENTWEATHER\", payload: data }));\r\n};\r\nexport const fetchForecast = (latitude, longitude) => async dispatch => {\r\n  // grab from weather forecast from api\r\n  fetch(\r\n    `https://api.openweathermap.org/data/2.5/forecast?lat=${latitude}&lon=${longitude}&units=metric&appid=${API_KEY}`\r\n  )\r\n    .then(response => response.json())\r\n    .then(data => dispatch({ type: \"FETCH_FORECAST\", payload: data }));\r\n};\r\nexport const fetchLocation = () => async dispatch => {\r\n  //get user's latitude and longitude with geolocation api\r\n  if (!navigator.geolocation) {\r\n    return;\r\n  }\r\n  navigator.geolocation.getCurrentPosition(\r\n    async position => {\r\n      const latitude = await position.coords.latitude;\r\n      const longitude = await position.coords.longitude;\r\n      dispatch({ type: \"FETCH_LOCATION\", payload: { latitude, longitude } });\r\n    },\r\n    error => console.log(error)\r\n  );\r\n};\r\n","const iconMap = new Map([\r\n  [\"01d\", \"wi wi-day-sunny\"],\r\n  [\"02d\", \"wi wi-day-cloudy-high\"],\r\n  [\"03d\", \"wi wi-day-cloudy\"],\r\n  [\"04d\", \"wi wi-day-cloudy\"],\r\n  [\"09d\", \"wi wi-day-showers\"],\r\n  [\"10d\", \"wi wi-day-rain\"],\r\n  [\"11d\", \"wi wi-day-thunderstorm\"],\r\n  [\"13d\", \"wi wi-day-snow\"],\r\n  [\"50d\", \"wi wi-day-fog\"],\r\n\r\n  [\"01n\", \"wi wi-night-clear\"],\r\n  [\"02n\", \"wi wi-night-partly-cloudy\"],\r\n  [\"03n\", \"wi wi-night-cloudy\"],\r\n  [\"04n\", \"wi wi-night-cloudy-high\"],\r\n  [\"09n\", \"wi wi-night-showers\"],\r\n  [\"10n\", \"wi wi-night-rain\"],\r\n  [\"11n\", \"wi wi-night-thunderstorm\"],\r\n  [\"13n\", \"wi wi-night-snow\"],\r\n  [\"50n\", \"wi wi-night-fog\"]\r\n]);\r\nconst iconChanger = icon => {\r\n  return iconMap.get(icon);\r\n};\r\nexport { iconChanger };\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { iconChanger } from \"../../helpers/iconTransform\";\r\n\r\nconst CurrentWeather = ({ city, temp, windSpeed, description, icon }) => {\r\n  return (\r\n    <Card primary={icon.split(\"\")[icon.length - 1] === \"d\"}>\r\n      <div>\r\n        <CardInfoBig> {city} </CardInfoBig>\r\n\r\n        <Temperature>{temp}°</Temperature>\r\n        <Description> {description} </Description>\r\n        <Wind>\r\n          <CardInfoSmall>\r\n            <i className=\"wi wi-strong-wind\" /> {windSpeed} m/s\r\n          </CardInfoSmall>\r\n        </Wind>\r\n      </div>\r\n      <div>\r\n        <i className={iconChanger(icon)} />\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Card = styled.div`\r\n  margin: 20px auto;\r\n  width: 700px;\r\n  height: 320px;\r\n\r\n  background-image: linear-gradient(\r\n    ${props =>\r\n      !props.primary\r\n        ? \"315deg, #f7b42c 0%, #fc575e 74%\"\r\n        : \"316deg, #58427c 0%, #746cc0 74%\"}\r\n  );\r\n  color: white;\r\n  border-radius: 20px;\r\n  i {\r\n    font-size: 200px;\r\n    color: white;\r\n  }\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  @media (max-width: 960px) {\r\n    width: 350px;\r\n    height: 250px;\r\n    i {\r\n      font-size: 100px;\r\n    }\r\n  }\r\n`;\r\nconst CardInfoBig = styled.h2`\r\n  font-size: 40px;\r\n  text-transform: uppercase;\r\n  @media (max-width: 960px) {\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst Temperature = styled.h3`\r\n  font-size: 62px;\r\n  @media (max-width: 960px) {\r\n    font-size: 40px;\r\n  }\r\n`;\r\nconst Description = styled.h3`\r\n  margin-top: 10px;\r\n  font-size: 42px;\r\n`;\r\nconst Wind = styled.div`\r\n  margin-top: 5px;\r\n  i {\r\n    font-size: 40px;\r\n  }\r\n`;\r\n\r\nconst CardInfoSmall = styled.h4`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { iconChanger } from \"../../helpers/iconTransform\";\r\nconst dateStuff = str => {\r\n  const cDate = new Date(str.split(\" \")[0]);\r\n  return {\r\n    hour: str.split(\" \")[1].slice(0, 5),\r\n    month: cDate.toLocaleString(\"en-us\", {\r\n      month: \"long\"\r\n    }),\r\n    date: cDate.getDate(),\r\n    day: cDate.toLocaleString(\"en-us\", {\r\n      weekday: \"long\"\r\n    })\r\n  };\r\n};\r\n\r\nfunction ForecastItem({ item }) {\r\n  const itemInfo = dateStuff(item.dt_txt);\r\n  return (\r\n    <ForecastItemWrapper>\r\n      <ForecastInfo>{itemInfo.day}</ForecastInfo>\r\n      <ForecastInfo>\r\n        {itemInfo.date} {itemInfo.month}\r\n      </ForecastInfo>\r\n      <ForecastInfo>{itemInfo.hour}</ForecastInfo>\r\n      <i className={iconChanger(item.weather[0].icon)} />\r\n      <ForecastInfo>{item.main.temp}°</ForecastInfo>\r\n    </ForecastItemWrapper>\r\n  );\r\n}\r\nconst ForecastItemWrapper = styled.div`\r\n  width: 140px;\r\n  height: 170px;\r\n  background-color: whitesmoke;\r\n  color: #2e3131;\r\n  border-radius: 4px;\r\n  margin: 6px;\r\n  i {\r\n    font-size: 40px;\r\n    margin: 3px;\r\n  }\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  @media (max-width: 960px) {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nconst ForecastInfo = styled.p`\r\n  font-size: 18px;\r\n  margin: 3px;\r\n`;\r\nexport default ForecastItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ForecastItem from \"./ForecastItem\";\r\n\r\nconst Forecast = props => {\r\n  return (\r\n    <ForecastWrapper>\r\n      {props.weatherList.map(\r\n        (item, i) =>\r\n          i % 2 === 0 && <ForecastItem item={item} key={item.dt_txt} />\r\n      )}\r\n    </ForecastWrapper>\r\n  );\r\n};\r\n\r\nconst ForecastWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  @media (max-width: 960px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport default Forecast;\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"../Presentational/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchCurrentWeather,\r\n  fetchLocation,\r\n  fetchForecast\r\n} from \"../../actions\";\r\nimport CurrentWeather from \"../Presentational/CurrentWeather\";\r\nimport Forecast from \"../Presentational/Forecast\";\r\nimport { MainWrapper } from \"../../helpers/Global\";\r\nclass WeatherContainer extends Component {\r\n  state = { loaded: false };\r\n  componentDidMount() {\r\n    this.props.fetchLocation();\r\n    if (this.props.weather && this.props.forecast) {\r\n      this.setState({ loaded: true });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (\r\n      this.props.userLocation.longitude !== prevProps.userLocation.longitude\r\n    ) {\r\n      this.props\r\n        .fetchCurrentWeather(\r\n          this.props.userLocation.latitude,\r\n          this.props.userLocation.longitude\r\n        )\r\n        .then(() => {\r\n          this.props.fetchForecast(\r\n            this.props.userLocation.latitude,\r\n            this.props.userLocation.longitude\r\n          );\r\n        })\r\n        .then(() => {\r\n          this.setState({ loaded: true });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, main, weather, wind } = this.props.weather;\r\n    const finishedLoading =\r\n      this.state.loaded &&\r\n      name &&\r\n      main &&\r\n      weather &&\r\n      wind &&\r\n      this.props.forecast.list;\r\n\r\n    return (\r\n      <>\r\n        {finishedLoading ? (\r\n          <MainWrapper>\r\n            <CurrentWeather\r\n              city={name}\r\n              temp={main.temp}\r\n              humidity={main.humidity}\r\n              description={weather[0].description}\r\n              icon={weather[0].icon}\r\n              windSpeed={wind.speed}\r\n            />\r\n            <Forecast weatherList={this.props.forecast.list} />\r\n          </MainWrapper>\r\n        ) : (\r\n          <Loader />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    weather: state.currentWeather,\r\n    userLocation: state.userLocation,\r\n    forecast: state.forecast\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchCurrentWeather, fetchLocation, fetchForecast }\r\n)(WeatherContainer);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderComp = () => (\r\n  <Header>\r\n    <HeaderItem>WEATHERAPP</HeaderItem>\r\n  </Header>\r\n);\r\n\r\nconst Header = styled.div`\r\n  width: 100%;\r\n  height: 70px;\r\n  background-color: #2e3131;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst HeaderItem = styled.h1`\r\n  color: white;\r\n  font-size: 26px;\r\n`;\r\n\r\nexport default HeaderComp;\r\n","import React from \"react\";\r\nimport Global from \"../helpers/Global\";\r\nimport WeatherContainer from \"./Container/WeatherContainer\";\r\nimport HeaderComp from \"./Presentational/HeaderComp\";\r\nimport \"../css/weather-icons.min.css\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Global />\r\n      <HeaderComp />\r\n\r\n      <WeatherContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nconst AppStore = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={AppStore}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}